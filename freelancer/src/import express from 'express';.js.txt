import express from 'express';
import mongoose from 'mongoose';
import bcrypt from 'bcryptjs';
import dotenv from 'dotenv';
import User from './models/User.js';
import cors from "cors";
dotenv.config({ path: './config.env' });

const app = express();
app.use(cors());
app.use(express.json());

mongoose.connect(process.env.LOCAL_CONN, {
  useNewUrlParser: true,
  useUnifiedTopology: true
})
.then(() => {
  console.log("Connection successful");
})
.catch((err) => {
  console.log("Error connecting to database", err);
});

app.get('/', (req, res) => {
  res.send("Hello World");
});

app.post('/signup', async (req, res) => {
  const { name, email, phno, password, role } = req.body;

  if (!name || !email || !phno || !password || !role) {
    return res.status(400).json({ message: 'All fields are required' });
  }

  try {
    // Check if the email already exists in the database
    const userExists = await User.findOne({ email });
    if (userExists) {
      return res.status(400).json({ message: 'Email already in use' });
    }

    // Create a new user
    const newUser = new User({
      name,
      email,
      phno,
      password,
      role
    });

    // Save the new user to the database
    await newUser.save();

    res.status(201).json({ message: 'Signup successful' });
  } catch (error) {
    console.error(error);
    res.status(500).json({ message: 'Error occurred during signup' });
  }
});

app.listen(5001, () => {
  console.log('Backend running on http://localhost:5001');
});
